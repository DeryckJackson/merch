{"version":3,"sources":["components/Header.js","components/Product.js","components/ProductList.js","components/ShoppingCart.js","components/ProductControl.js","components/App.js","reducers/index.js","reducers/cart_visible_reducer.js","reducers/product_list_reducer.js","index.js"],"names":["Header","Jumbotron","className","Product","props","button","cartButton","onClick","whenAddProductToCart","id","name","price","Fragment","ProductList","productList","map","product","onAddProductToCart","addCartButton","ShoppingCart","Object","values","shoppingCart","ProductControl","viewCartToggle","dispatch","type","handleAddProductToCart","setState","cartVisibleOnPage","state","currentlyVisibleState","buttonText","isAddCartButtonVisible","this","React","Component","propTypes","PropTypes","object","connect","App","Container","rootReducer","combineReducers","cartVisibleReducer","action","productListReducer","assign","newState","store","createStore","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c0242ce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nfunction Header() {\r\n  return (\r\n    <Jumbotron>\r\n      <h1 className=\"header\">Merch</h1>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Product(props) {\r\n  let button = null;\r\n\r\n  if(props.cartButton) {\r\n    button = <button onClick={() =>\r\n      props.whenAddProductToCart({id: props.id, name: props.name, price: props.price})}>Add to cart</button>\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <hr />\r\n      <h3>Product Name: {props.name}</h3>\r\n      <h3>Price: {props.price}</h3>\r\n      {button}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nProduct.propTypes = {\r\n  name: PropTypes.string,\r\n  price: PropTypes.string,\r\n  id: PropTypes.number,\r\n  cartButton: PropTypes.bool\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport Product from \"./Product\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n// const masterProductList = [\r\n//   {\r\n//     name: \"Ninja Sh%t\",\r\n//     price: \"$49.99\",\r\n//     key: v4()\r\n//   },\r\n//   {\r\n//     name: \"More Ninja Sh%t\",\r\n//     price: \"$59.99\",\r\n//     key: v4()\r\n//   },\r\n//   {\r\n//     name: \"Kunai\",\r\n//     price: \"$9.99\",\r\n//     key: v4()\r\n//   }\r\n// ]\r\n\r\n\r\n\r\nfunction ProductList(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.productList.map((product) =>\r\n        <Product\r\n          whenAddProductToCart={props.onAddProductToCart}\r\n          name={product.name}\r\n          price={product.price}\r\n          id={product.id}\r\n          cartButton={props.addCartButton}/>\r\n        )\r\n      }\r\n      <hr />\r\n    </React.Fragment >\r\n  );\r\n}\r\n\r\nProductList.propTypes = {\r\n  productList: PropTypes.array.isRequired,\r\n  addCartButton: PropTypes.bool,\r\n  onAddProductToCart: PropTypes.func\r\n}\r\n\r\nexport default ProductList;\r\n","import React from \"react\";\r\nimport Product from \"./Product\"\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ShoppingCart(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>Cart</h1>\r\n      {Object.values(props.shoppingCart).map((product) => {\r\n        return <Product\r\n          name={product.name}\r\n          price={product.price}\r\n          id={product.id} />\r\n        \r\n      })}\r\n      <hr/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nShoppingCart.propTypes = {\r\n  shoppingCart: PropTypes.object\r\n}\r\n\r\nexport default ShoppingCart;\r\n","import React from \"react\";\r\nimport ProductList from './ProductList';\r\nimport ShoppingCart from './ShoppingCart';\r\n// import { v4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ProductControl extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      productList: [\r\n        {\r\n          name: \"Ninja Sh%t\",\r\n          price: \"$49.99\",\r\n          id: 0\r\n        },\r\n        {\r\n          name: \"More Ninja Sh%t\",\r\n          price: \"$59.99\",\r\n          id: 1\r\n        },\r\n        {\r\n          name: \"Kunai\",\r\n          price: \"$9.99\",\r\n          id: 2\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  viewCartToggle = () => {\r\n    const { dispatch } = this.props;\r\n    const action = {\r\n      type: \"TOGGLE_CART\"\r\n    }\r\n    dispatch(action);\r\n  }\r\n\r\n  handleAddProductToCart = (product) => {\r\n    const { dispatch } = this.props;\r\n    const { id, name, price } = product;\r\n    const action = {\r\n      type: 'ADD_PRODUCT',\r\n      id: id,\r\n      name: name,\r\n      price: price\r\n    }\r\n    dispatch(action);\r\n    this.setState({cartVisibleOnPage: true});\r\n  }\r\n\r\n\r\n  render(){\r\n    let currentlyVisibleState = null;\r\n    let buttonText = null;\r\n    let isAddCartButtonVisible = null;\r\n\r\n    if (this.state.cartVisibleOnPage) {\r\n      isAddCartButtonVisible = false;\r\n      currentlyVisibleState = <ShoppingCart\r\n      shoppingCart={this.props.shoppingCart}\r\n      addCartButton={isAddCartButtonVisible} />\r\n      buttonText = <button onClick={this.viewCartToggle}>Return to Product List</button>\r\n    } else {\r\n      isAddCartButtonVisible = true;\r\n      currentlyVisibleState = <ProductList\r\n      productList={this.state.productList}\r\n      onAddProductToCart={this.handleAddProductToCart}\r\n      addCartButton={isAddCartButtonVisible} />\r\n      buttonText = <button onClick={this.viewCartToggle}>View Cart</button>\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {currentlyVisibleState}\r\n        <br />\r\n        <br />\r\n        {buttonText}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\n// handleDeletingProduct = (key) => {\r\n//   const newMasterProductList = this.state.masterProductList.filter(product => product.key !==key);\r\n//   this.setState({\r\n//     masterProductList: newMasterProductList,\r\n//     selectedProduct: null\r\n//   });\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    shoppingCart: state,\r\n    cartVisibleOnPage: state.cartVisibleOnPage\r\n  }\r\n}\r\n\r\nProductList.propTypes = {\r\n  shoppingCart: PropTypes.object\r\n};\r\n\r\nProductControl = connect(mapStateToProps)(ProductControl);\r\n\r\nexport default ProductControl;\r\n","import React from 'react';\r\nimport Header from './Header'\r\nimport ProductControl from './ProductControl';\r\nimport { Container } from 'react-bootstrap';\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  render () {\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n          <Header />\r\n          <ProductControl  />\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import cartVisibleReducer from './cart_visible_reducer';\r\nimport productListReducer from './product_list_reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  cartVisibleReducer: cartVisibleReducer,\r\n  productListReducer: productListReducer\r\n});\r\n\r\nexport default rootReducer;","export default (state = false, action) => {\r\n  switch (action.type) {\r\n  case 'TOGGLE_CART':\r\n    return !state;\r\n  default:\r\n    return state;\r\n  }\r\n};","export default (state = {}, action) => {\r\n  const { id, name, price } = action;\r\n  switch (action.type) {\r\n  case 'ADD_PRODUCT':\r\n    return Object.assign({}, state, {\r\n      [id]: {\r\n        name: name,\r\n        price: price,\r\n        id: id\r\n      }\r\n    });\r\n    case 'DELETE_PRODUCT':\r\n      const newState = {...state};\r\n      delete newState[id];\r\n      return newState;\r\n  default:\r\n      return state;\r\n  }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nstore.subscribe(() =>\r\n  console.log(store.getState())\r\n);\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}